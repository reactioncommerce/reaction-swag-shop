{
  "parser": "babel-eslint",
  // "extends": [
  //   "plugin:jsx-a11y/recommended"
  // ],
  "env": {
    "browser": true,
    "es6": true,
    "jest/globals": true,
    "mocha": true,
    "node": true
  },
  "globals": {
    "Assets": true, // Meteor global
    "Package": true, // Meteor global
    "FS": true, // gridFS,
    "gm": true, // cfs:graphicsmagick
    "Alerts": true  // this needs to get cleaned up, but ignoring for now
  },

  "parserOptions": {
    "ecmaVersion": 2017,
    "sourceType": "module",
    "ecmaFeatures": {
      "arrowFunctions": true,
      "blockBindings": true,
      "classes": true,
      "defaultParams": true,
      "destructuring": true,
      "forOf": true,
      "generators": false,
      "modules": true,
      "objectLiteralComputedProperties": true,
      "objectLiteralDuplicateProperties": false,
      "objectLiteralShorthandMethods": true,
      "objectLiteralShorthandProperties": true,
      "spread": true,
      "superInFunctions": true,
      "templateStrings": true,
      "jsx": true
    },
    "allowImportExportEverywhere": true
  },
  "plugins": ["import", "jest", "jsx-a11y", "react"],
  "rules": {
    /**
    * Strict mode
    * babel inserts "use strict"; for us
    * http://eslint.org/docs/rules/strict
    */
    "strict": 0,

    /**
    * ES6
    */
    "object-curly-spacing": ["error", "always", { "objectsInObjects": true }],
    "no-var": 2, // http://eslint.org/docs/rules/no-var

    /**
    * Variables
    */
    "no-shadow": 2, // http://eslint.org/docs/rules/no-shadow
    "no-shadow-restricted-names": 2, // http://eslint.org/docs/rules/no-shadow-restricted-names
    "no-const-assign": 2, // http://eslint.org/docs/rules/no-const-assign
    "no-unused-vars": [2, { // http://eslint.org/docs/rules/no-unused-vars
      "vars": "all",
      "args": "after-used",
      "ignoreRestSiblings": true
    }],
    "no-use-before-define": [2, "nofunc"], // http://eslint.org/docs/rules/no-use-before-define
    "no-implicit-globals": 2, // http://eslint.org/docs/rules/no-implicit-globals

    /**
    * Possible errors
    */
    "comma-dangle": ["error", "never"], // http://eslint.org/docs/rules/comma-dangle
    "no-cond-assign": [2, "always"], // http://eslint.org/docs/rules/no-cond-assign
    "no-console": 2, // http://eslint.org/docs/rules/no-console
    "no-debugger": 1, // http://eslint.org/docs/rules/no-debugger
    "no-alert": 1, // http://eslint.org/docs/rules/no-alert
    "no-constant-condition": 1, // http://eslint.org/docs/rules/no-constant-condition
    "no-dupe-keys": 2, // http://eslint.org/docs/rules/no-dupe-keys
    "no-duplicate-case": 2, // http://eslint.org/docs/rules/no-duplicate-case
    "no-empty": 2, // http://eslint.org/docs/rules/no-empty
    "no-ex-assign": 2, // http://eslint.org/docs/rules/no-ex-assign
    "no-extra-boolean-cast": 2, // http://eslint.org/docs/rules/no-extra-boolean-cast
    "no-extra-semi": 2, // http://eslint.org/docs/rules/no-extra-semi
    "no-func-assign": 2, // http://eslint.org/docs/rules/no-func-assign
    "no-inner-declarations": 2, // http://eslint.org/docs/rules/no-inner-declarations
    "no-invalid-regexp": 2, // http://eslint.org/docs/rules/no-invalid-regexp
    "no-irregular-whitespace": 2, // http://eslint.org/docs/rules/no-irregular-whitespace
    "no-obj-calls": 2, // http://eslint.org/docs/rules/no-obj-calls
    "no-sparse-arrays": 2, // http://eslint.org/docs/rules/no-sparse-arrays
    "no-unreachable": 2, // http://eslint.org/docs/rules/no-unreachable
    "use-isnan": 2, // http://eslint.org/docs/rules/use-isnan
    "block-scoped-var": 0, // http://eslint.org/docs/rules/block-scoped-var

    /**
    * JSX / React
    */
    "jsx-quotes": [2, "prefer-double"], // http://eslint.org/docs/rules/jsx-quotes
    "react/no-deprecated": 1,
    "react/display-name": 1,
    "react/forbid-prop-types": 0,
    "react/jsx-boolean-value": 0,
    "react/jsx-closing-bracket-location": 1,
    "react/jsx-curly-spacing": 1,
    "react/jsx-indent-props": [1, 2],
    "react/jsx-max-props-per-line": [1, {
      "maximum": 4
    }],
    "react/jsx-no-bind": 0,
    "react/jsx-no-duplicate-props": 1,
    "react/jsx-no-literals": 0,
    "react/jsx-no-undef": 1,
    "react/sort-prop-types": 1,
    "react/jsx-sort-props": 0,
    "react/jsx-uses-react": 1,
    "react/jsx-uses-vars": 1,
    "react/no-danger": 1,
    "react/no-did-mount-set-state": 1,
    "react/no-did-update-set-state": 1,
    "react/no-direct-mutation-state": 1,
    "react/no-multi-comp": 1,
    "react/no-set-state": 0,
    "react/no-unknown-property": 1,
    "react/prefer-es6-class": 1,
    "react/prop-types": 1,
    "react/react-in-jsx-scope": 0,
    "react/require-extension": "off",
    "react/self-closing-comp": 1,
    "react/sort-comp": 1,

    /**
    * Best practices
    */
    "consistent-return": [0, { // http://eslint.org/docs/rules/consistent-return
      "treatUndefinedAsUnspecified": true
    }],
    "curly": [2, "multi-line"], // http://eslint.org/docs/rules/curly
    "default-case": 2, // http://eslint.org/docs/rules/default-case
    "dot-notation": [2, { // http://eslint.org/docs/rules/dot-notation
      "allowKeywords": true
    }],
    "eqeqeq": 2, // http://eslint.org/docs/rules/eqeqeq
    "guard-for-in": 2, // http://eslint.org/docs/rules/guard-for-in
    "prefer-const": [1, {
      "destructuring": "any",
      "ignoreReadBeforeAssign": false
    }],
    "no-caller": 2, // http://eslint.org/docs/rules/no-caller
    "no-else-return": 2, // http://eslint.org/docs/rules/no-else-return
    "no-eq-null": 2, // http://eslint.org/docs/rules/no-eq-null
    "no-eval": 2, // http://eslint.org/docs/rules/no-eval
    "no-extend-native": 2, // http://eslint.org/docs/rules/no-extend-native
    "no-extra-bind": 2, // http://eslint.org/docs/rules/no-extra-bind
    "no-fallthrough": 2, // http://eslint.org/docs/rules/no-fallthrough
    "no-floating-decimal": 2, // http://eslint.org/docs/rules/no-floating-decimal
    "no-implied-eval": 2, // http://eslint.org/docs/rules/no-implied-eval
    "no-lone-blocks": 2, // http://eslint.org/docs/rules/no-lone-blocks
    "no-loop-func": 2, // http://eslint.org/docs/rules/no-loop-func
    "no-multi-str": 2, // http://eslint.org/docs/rules/no-multi-str
    "no-native-reassign": 2, // http://eslint.org/docs/rules/no-native-reassign
    "no-new": 2, // http://eslint.org/docs/rules/no-new
    "no-new-func": 2, // http://eslint.org/docs/rules/no-new-func
    "no-new-wrappers": 2, // http://eslint.org/docs/rules/no-new-wrappers
    "no-octal": 2, // http://eslint.org/docs/rules/no-octal
    "no-octal-escape": 2, // http://eslint.org/docs/rules/no-octal-escape
    "no-param-reassign": 2, // http://eslint.org/docs/rules/no-param-reassign
    "no-proto": 2, // http://eslint.org/docs/rules/no-proto
    "no-redeclare": 2, // http://eslint.org/docs/rules/no-redeclare
    "no-return-assign": ["error", "always"], // http://eslint.org/docs/rules/no-return-assign
    "no-script-url": 2, // http://eslint.org/docs/rules/no-script-url
    "no-self-compare": 2, // http://eslint.org/docs/rules/no-self-compare
    "no-sequences": 2, // http://eslint.org/docs/rules/no-sequences
    "no-throw-literal": 2, // http://eslint.org/docs/rules/no-throw-literal
    "no-with": 2, // http://eslint.org/docs/rules/no-with,
    "no-undef": 2,
    "radix": 2, // http://eslint.org/docs/rules/radix
    "vars-on-top": 2, // http://eslint.org/docs/rules/vars-on-top
    "wrap-iife": ["error", "outside", { "functionPrototypeMethods": false }], // http://eslint.org/docs/rules/wrap-iife
    "yoda": 2, // http://eslint.org/docs/rules/yoda
    "max-len": [1, 160, 2, {
      "ignoreComments": true,
      "ignoreUrls": true
    }], // http://eslint.org/docs/rules/max-len
    "require-jsdoc": [0, {
      "require": {
        "FunctionDeclaration": true,
        "MethodDefinition": false,
        "ClassDeclaration": false,
        "ArrowFunctionExpression": false
      }
    }], // https://eslint.org/docs/rules/require-jsdoc
    "valid-jsdoc": [0, {
      "prefer": {
        "arg": "param",
        "argument": "param"
      }
    }], // http://eslint.org/docs/rules/valid-jsdoc
    "quote-props": [2, "consistent-as-needed"], // http://eslint.org/docs/rules/quote-props

    /**
    * Style
    */
    "indent": [2, 2, {"SwitchCase": 1}], // http://eslint.org/docs/rules/indent
    "brace-style": [2, // http://eslint.org/docs/rules/brace-style
      "1tbs", {
        "allowSingleLine": true
      }
    ],
    "quotes": ["error", "double", { "avoidEscape": true }], // http://eslint.org/docs/rules/quotes
    "camelcase": [2, { // http://eslint.org/docs/rules/camelcase
      "properties": "always"
    }],
    "comma-spacing": [2, { // http://eslint.org/docs/rules/comma-spacing
      "before": false,
      "after": true
    }],
    "comma-style": [2, "last"], // http://eslint.org/docs/rules/comma-style
    "eol-last": 2, // http://eslint.org/docs/rules/eol-last
    "func-names": 0, // http://eslint.org/docs/rules/func-names
    "func-style": [2, "declaration", {"allowArrowFunctions": true }], // http://eslint.org/docs/rules/func-style
    "key-spacing": [2, { // http://eslint.org/docs/rules/key-spacing
      "beforeColon": false,
      "afterColon": true
    }],
    "new-cap": [0, { // http://eslint.org/docs/rules/new-cap  (turned off for now, as it complains on all Match)
      "newIsCap": true,
      "capIsNewExceptions": ["Match", "OneOf", "Optional"]
    }],
    "no-multiple-empty-lines": [2, { // http://eslint.org/docs/rules/no-multiple-empty-lines
      "max": 2
    }],
    "no-nested-ternary": 2, // http://eslint.org/docs/rules/no-nested-ternary
    "no-new-object": 2, // http://eslint.org/docs/rules/no-new-object
    "no-array-constructor": 2, // http://eslint.org/docs/rules/no-array-constructor
    "no-spaced-func": 2, // http://eslint.org/docs/rules/no-spaced-func
    "no-trailing-spaces": 2, // http://eslint.org/docs/rules/no-trailing-spaces
    "no-extra-parens": [2, "functions"], // http://eslint.org/docs/rules/no-extra-parens
    "no-underscore-dangle": 0, // http://eslint.org/docs/rules/no-underscore-dangle
    "one-var": [2, "never"], // http://eslint.org/docs/rules/one-var
    "padded-blocks": [2, "never"], // http://eslint.org/docs/rules/padded-blocks
    "semi": [2, "always"], // http://eslint.org/docs/rules/semi
    "semi-spacing": [2, { // http://eslint.org/docs/rules/semi-spacing
      "before": false,
      "after": true
    }],
    "keyword-spacing": 2, // http://eslint.org/docs/rules/keyword-spacing
    "space-before-blocks": 2, // http://eslint.org/docs/rules/space-before-blocks
    "space-before-function-paren": [2, {
      "anonymous": "always",
      "named": "never"
    }], // http://eslint.org/docs/rules/space-before-function-paren
    "space-infix-ops": 2, // http://eslint.org/docs/rules/space-infix-ops
    "space-in-parens": [2, "never"], // http://eslint.org/docs/rules/space-in-parens
    "spaced-comment": [2, "always"], // http://eslint.org/docs/rules/spaced-comment
    "arrow-spacing": [2, { "before": true, "after": true }], // https://eslint.org/docs/rules/arrow-spacing

    /**
    * Additional rules to enable one by one
    */
    // "array-bracket-spacing": ["error", "never"],
    // "array-callback-return": ["error", { "allowImplicit": true }],
    // "arrow-body-style": ["error", "as-needed", { "requireReturnForObjectLiteral": false }],
    // "arrow-parens": [ "error", "always", { "requireForBlockBody": true }],
    "block-spacing": ["error", "always"],
    "computed-property-spacing": ["error", "never"],
    "dot-location": ["error", "property"],
    "function-paren-newline": ["error", "multiline"],
    "import/export": "error",
    "import/order": ["error", {
      "groups": [
        "builtin",
        "external",
        "internal",
        "parent",
        "sibling",
        "index"
      ]
    }],
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "import/no-mutable-exports": "error",
    "import/no-named-default": "error",
    "new-parens": "error",
    "newline-per-chained-call": ["error", { "ignoreChainWithDepth": 4 }],
    // "no-await-in-loop": "error",
    // "no-bitwise": "error",
    // "no-case-declarations": "error",
    // "no-confusing-arrow": ["error", { "allowParens": true }],
    // "no-empty-pattern": "error",
    // "no-lonely-if": "error",
    // // This rule copied from Airbnb's config
    // "no-mixed-operators": ["error", {
    //   "groups": [
    //     ["%", "**"],
    //     ["%", "+"],
    //     ["%", "-"],
    //     ["%", "*"],
    //     ["%", "/"],
    //     ["**", "+"],
    //     ["**", "-"],
    //     ["**", "*"],
    //     ["**", "/"],
    //     ["&", "|", "^", "~", "<<", ">>", ">>>"],
    //     ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
    //     ["&&", "||"],
    //     ["in", "instanceof"]
    //   ],
    //   "allowSamePrecedence": false
    // }],
    // "no-multi-assign": ["error"],
    // "no-multi-spaces": ["error", { "ignoreEOLComments": false }],
    // "no-plusplus": "error",
    // "no-prototype-builtins": "error",
    // "no-tabs": "error",
    // "no-undef-init": "error",
    // "no-unneeded-ternary": ["error", { "defaultAssignment": false }],
    // "no-unsafe-finally": "error",
    // "no-useless-computed-key": "error",
    // "no-useless-concat": "error",
    // "no-useless-constructor": "error",
    // "no-useless-escape": "error",
    // "no-void": "error",
    // "object-curly-newline": ["error", { "ObjectExpression": { "multiline": true, "consistent": true }, "ObjectPattern": { "multiline": true, "consistent": true } }],
    // "object-property-newline": ["error", { "allowAllPropertiesOnSameLine": true }],
    "object-shorthand": ["error", "always"],
    // "operator-assignment": ["error", "always"],
    "prefer-arrow-callback": ["error", { "allowNamedFunctions": false, "allowUnboundThis": true }],
    // "prefer-destructuring": ["error", {
    //   "VariableDeclarator": {
    //     "array": false,
    //     "object": true
    //   },
    //   "AssignmentExpression": {
    //     "array": true,
    //     "object": true
    //   }
    // }, {
    //   "enforceForRenamedProperties": false
    // }],
    // "prefer-rest-params": "error",
    // "prefer-spread": "error",
    // "prefer-template": "error",
    // "rest-spread-spacing": ["error", "never"],
    "space-unary-ops": ["error", {
      "words": true,
      "nonwords": false,
      "overrides": {}
    }],
    "template-curly-spacing": "error"
  }
}
